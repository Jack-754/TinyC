Keyword: auto
Keyword: enum
Keyword: restrict
Keyword: unsigned
Keyword: break
Keyword: extern
Keyword: return
Keyword: void
Keyword: case
Keyword: float
Keyword: short
Keyword: volatile
Keyword: char
Keyword: for
Keyword: signed
Keyword: while
Keyword: const
Keyword: goto
Keyword: sizeof
Keyword: _Bool
Keyword: continue
Keyword: if
Keyword: static
Keyword: _Complex
Keyword: default
Keyword: inline
Keyword: struct
Keyword: _Imaginary
Keyword: do
Keyword: int
Keyword: switch
Keyword: double
Keyword: long
Keyword: typedef
Keyword: else
Keyword: register
Keyword: union
Identifier: variable_name
Identifier: _underscore_start
Identifier: mixedCase123
Identifier: UPPERCASE_ID
Constant: 123
Constant: 9876543210
Constant: 3.14
Constant: 2.5e-3
Constant: .5
Constant: 5.
Identifier: ENUM_CONSTANT
Single Line Comment IGNORED
Multi Line Comment IGNORED
Constant: 'a'
Constant: '\''
Constant: '\"'
Constant: '\?'
Constant: '\\'
Constant: '\a'
Constant: '\b'
Constant: '\f'
Constant: '\n'
Constant: '\r'
Constant: '\t'
Constant: '\v'
String Literal: "This is a string literal"
String Literal: "Escaped characters: \' \" \? \\ \a \b \f \n \r \t \v"
String Literal: ""
Punctuator: ++
Punctuator: --
Punctuator: &
Punctuator: |
Punctuator: ^
Punctuator: <<
Punctuator: >>
Punctuator: <=
Punctuator: >=
Punctuator: ==
Punctuator: !=
Punctuator: &&
Punctuator: ||
Punctuator: +
Punctuator: -
Punctuator: *
Punctuator: /
Punctuator: %
Punctuator: =
Punctuator: (
Punctuator: )
Punctuator: {
Punctuator: }
Punctuator: [
Punctuator: ]
Punctuator: ;
Punctuator: ,
Punctuator: .
Punctuator: !
Punctuator: ~
Punctuator: ?
Punctuator: :
Punctuator: #
Keyword: int
Identifier: main
Punctuator: (
Punctuator: )
Punctuator: {
Keyword: float
Identifier: pi
Punctuator: =
Constant: 3.14159
Punctuator: ;
Keyword: char
Identifier: c
Punctuator: =
Constant: 'X'
Punctuator: ;
Keyword: char
Punctuator: *
Identifier: str
Punctuator: =
String Literal: "Hello, World!"
Punctuator: ;
Keyword: if
Punctuator: (
Identifier: pi
Punctuator: >
Constant: 3
Punctuator: )
Punctuator: {
Identifier: printf
Punctuator: (
String Literal: "Pi is greater than 3\n"
Punctuator: )
Punctuator: ;
Punctuator: }
Keyword: for
Punctuator: (
Keyword: int
Identifier: i
Punctuator: =
Constant: 0
Punctuator: ;
Identifier: i
Punctuator: <
Constant: 10
Punctuator: ;
Punctuator: ++
Identifier: i
Punctuator: )
Punctuator: {
Identifier: printf
Punctuator: (
String Literal: "%d "
Punctuator: ,
Identifier: i
Punctuator: )
Punctuator: ;
Punctuator: }
Keyword: return
Constant: 0
Punctuator: ;
Punctuator: }
Constant: 0
Identifier: x1A
Constant: 123
Identifier: abc
IDENTIFIERS:
abc
x1A
i
printf
i
i
i
printf
pi
str
c
pi
main
ENUM_CONSTANT
UPPERCASE_ID
mixedCase123
_underscore_start
variable_name

CONSTANTS:
123
0
0
10
0
3
'X'
3.14159
'\v'
'\t'
'\r'
'\n'
'\f'
'\b'
'\a'
'\\'
'\?'
'\"'
'\''
'a'
5.
.5
2.5e-3
3.14
9876543210
123

STRING LITERALS:
"%d "
"Pi is greater than 3\n"
"Hello, World!"
""
"Escaped characters: \' \" \? \\ \a \b \f \n \r \t \v"
"This is a string literal"